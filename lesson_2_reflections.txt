What happens when you initialize a repository? Why do you need to do it?

	When a repository is initialized, a hidden folder named .git is 
	added with the settings of the repository.
	This action is needed to create the initial setup of the repo.

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

	The staging area is a temporary status for the changes to group them
	into a commit due to the limitations of working with the command line

How can you use the staging area to make sure you have one commit per logical change?

	By select (and ignoring) the files that belong to the same feature
	when the change is finished.

What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?

	Branches help to work on different features without modifiying the main
	code until everything is ready and works.

How do the diagrams help you visualize the branch structure?

	Well, it's really incredible that people are happy with this command line
	visualization. I can understand the joy of those that use branches after 
	switching to a decent GUI for Git.

What is the result of merging two branches together? Why do we represent it in 
the diagram the way we do?

	Merging two branches means that all of the changes that have been done on
	each of those branches are applied on the files. 
	Unless you have a merge conflict :-(
	We represent it that way because two paths of code now become one.

